admin:
  address:
    socket_address:
      protocol: TCP
      address: 127.0.0.1
      port_value: 9901
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          use_remote_address: true
          xff_num_trusted_hops: 0
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
              log_format:
                text_format_source:
                  inline_string: |
                    [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "XFF: %REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "Metadata: %DYNAMIC_METADATA(curiefense)%" "Ext address: %REQ(X-ENVOY-EXTERNAL-ADDRESS)%" "Internal: %REQ(X-ENVOY-INTERNAL)%" "%UPSTREAM_HOST%"\n
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  host_rewrite_literal: localhost
                  cluster: service_envoyproxy_io
          http_filters:
          - name: mytag0
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.common.matching.v3.ExtensionWithMatcher
              extension_config:
                name: envoy.filters.http.set_metadata
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.set_metadata.v3.Config
                  metadata_namespace: curiefense
                  value:
                    tags:
                      mytag0: true
              xds_matcher:
                matcher_list:
                  matchers:
                    - predicate:
                        not_matcher:
                          or_matcher:
                            predicate:
                              - single_predicate:
                                  input:
                                    name: request-headers
                                    typed_config:
                                      "@type": type.googleapis.com/envoy.type.matcher.v3.HttpRequestHeaderMatchInput
                                      header_name: "x-envoy-external-address"
                                  custom_match:
                                    name: envoy.matching.input_matchers.ip
                                    typed_config:
                                      "@type": "type.googleapis.com/envoy.extensions.matching.input_matchers.ip.v3.Ip"
                                      cidr_ranges:
                                      - address_prefix: "192.168.1.0"
                                        prefix_len: 24
                                      stat_prefix: "myprefix"
                              - single_predicate:
                                  input:
                                    name: request-headers
                                    typed_config:
                                      "@type": type.googleapis.com/envoy.type.matcher.v3.HttpRequestHeaderMatchInput
                                      header_name: headertag0
                                  value_match:
                                    exact: foo
                      on_match:
                        action:
                          name: skip
                          typed_config:
                            "@type": type.googleapis.com/envoy.extensions.filters.common.matcher.action.v3.SkipFilter
          - name: mytag1
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.common.matching.v3.ExtensionWithMatcher
              extension_config:
                name: envoy.filters.http.set_metadata
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.set_metadata.v3.Config
                  metadata_namespace: curiefense
                  value:
                    tags:
                      mytag1: true
              xds_matcher:
                matcher_list:
                  matchers:
                    - predicate:
                        not_matcher:
                          single_predicate:
                            input:
                              name: request-headers
                              typed_config:
                                "@type": type.googleapis.com/envoy.type.matcher.v3.HttpRequestHeaderMatchInput
                                header_name: headertag1
                            value_match:
                              exact: foo
                      on_match:
                        action:
                          name: skip
                          typed_config:
                            "@type": type.googleapis.com/envoy.extensions.filters.common.matcher.action.v3.SkipFilter
          - name: mytag2
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.common.matching.v3.ExtensionWithMatcher
              extension_config:
                name: envoy.filters.http.set_metadata
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.set_metadata.v3.Config
                  metadata_namespace: curiefense
                  value:
                    tags:
                      mytag2: true
              xds_matcher:
                matcher_list:
                  matchers:
                    - predicate:
                        not_matcher:
                          single_predicate:
                            input:
                              name: header_rx
                              typed_config:
                                "@type": type.googleapis.com/envoy.type.matcher.v3.HttpRequestHeaderMatchInput
                                header_name: headertag2
                            custom_match:
                              name: envoy.matching.input_matchers.hyperscan
                              typed_config:
                                "@type": "type.googleapis.com/envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan"
                                regexes:
                                  - regex: "^prefix0_"
                                    caseless: true
                                    utf8: true
                                    id: 1
                                    quiet: true
                                  - regex: "^prefix1_"
                                    caseless: true
                                    utf8: true
                                    id: 2
                                    quiet: true
                                  - regex: "1 | 2"
                                    combination: true
                      on_match:
                        action:
                          name: skip
                          typed_config:
                            "@type": type.googleapis.com/envoy.extensions.filters.common.matcher.action.v3.SkipFilter
          - name: deny_tag0_or_tag1
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
              rules:
                action: DENY
                policies:
                  "match_tag0_or_tag1":
                    principals:
                      - any: true
                    permissions:
                      or_rules:
                        rules:
                          - metadata:
                              filter: "curiefense"
                              path:
                                - key: tags
                                - key: mytag0
                              value:
                                bool_match: true
                          - metadata:
                              filter: "curiefense"
                              path:
                                - key: tags
                                - key: mytag1
                              value:
                                bool_match: true
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - name: service_envoyproxy_io
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: service_envoyproxy_io
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: google.com
                port_value: 80
